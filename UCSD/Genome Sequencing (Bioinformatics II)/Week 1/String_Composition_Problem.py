#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Tue Oct 22 17:39:26 2019

IN this problem, we need to split a string into several pieces with fixed 
length of k.


Input: An integer k and a string Text.
Output: Compositionk(Text) (the k-mers can be provided in any order).


Create a loop to iterate through the whole string, and for each iteration,
create the substring that from the start position to start + k position

O(n)


@author: jungangzou
"""

def string_composition_problem(k, text):
    return [text[i : i + k] for i in range(len(text) - k + 1)]


if __name__ == "__main__":
    k = 100
    text = "TCTCTTTTACCTCAGGCAAGGTAAGCACGACCAGGTTGGTGTTAAAGTGTCCCCAAATCGGTAGCGTGGTGAGTCTCGATTCGCCGTAGCGACGTTAGGGTGCCTTCGCGTTATGTGCTGGGTGCTAAAATTATGTGCCATAGTGAACGCTTTTTTTGTAGTATTTCAGCCGGCCTAATAAACACGCATTCGAGGGATGTTGTACGTGGGCTAGGTTGCGTTCAGTAATTCCAGTTAGAGTTCGGTGTGCTGCCGGTGTGCCTCTTCCCGACGCGTCTCCGGTGTGCGCGTCCATCGGATTCTTCTTCCAACCGTGAAACATGATCTGCTTGCACCCACGTCTAGGATCACTCTGTTGCACTTACGACGGCTTAGGGACCTCTGTCGGTAGGGGTGGAGAGGCCCTGTTAAAGTCTGCTCGCGGGGAGGTTATAAGCACATTGACCCCTCTTCCTGCTCGCATCGTACGCGTGCACAAGCGTGGTAGCACACACTCTGGCGCTGCTGAGAAAGAGGCGTCGATAGGACCATAGATATGGTAGGACCCCTATTACGTTACACTCATTTCGTGTGTGTATCCAGAAGGGAGGGTTGCAAGGAATGGCTAAGAATGCTGTGCGTCAGGCAGTCAATGTCTTTGCACGGAAGTATCACTAGCACGTCAAGACAGAAGGGGTACGCTGATTTCCAGTTCAAACGTCCTCTCGACCACGGTTAAAATAGCCCCAGTCGATCGTAGCTAATTTCTTGCTCGGGATCGGTGCAGAAAGTAGAGGCGTACAGATTCTGTTGATATACATTCCAAGTAATATTTCCCCGTGCCCAACGCCTACCGCTTTCAATGATAGGCCGCGAACCCGGACAGGCAAAGGATACCTGTCCGTGTTTCCTAATTCCTCAAAATCGACTTTTGAAGGAGCACCCGGGTGTGCGGATACAGATCACGCCATGGTCCTACGCGATTTGTCGAACAACGCCTGAGGAACGCCGAGTTGTCGGCAGCCTACTCTGATGTGGATCCTATAGAGGTTAGATTTACTTATGAAGAGTAATGCACGGAGCCGTGATCGTACGGATAAGCCGGAACAACTAGGACGAAGATTATACCGTAGCACTAGGAAGAACACTCATGTCAAATAGTCTTCGTTACAGAAGGCAGTGATATAGAATTGAGGGGCGTCATTGCTGTTCGACAGATATGTCGTCTGTGTGGTTCCTTCCAGCTAAGAGCTTTTAGAATCCGCCGCTTTGTGCCACTTGTAGAGTGCCCAACGGCTCGTTGTTCGAGCTGAGAGCCATTTCTTACTGTGGTAGCCAAAGCGCGAACCGATCTTCACCCGGTTTCGATCCCTGTGAGAGCAACCCCATAGGGAAGTGACCACTATCTCCGTCACTATACTAAGGCTTCCGCGATACACGGTATTCGATTTTGCGCGCCTATGGATACGCGGCGGATACTAGGACCCCGGGTTCTTCCCTCAAAACAGCAAGCCAAAACACGTTACAACTATGGATGCCCACGCAATCTACATAGGCCTGGTTCGTGCGGGGCGGTAGGTAGTCTCTTGCGTTAAATCATCACATTTTCGCTTTCATATGGTTACCATCAACCGGTCGAGACATGGCGAATTTCTGCGGGCATTCCACCAACCTTGCCCGTTCGTTCAGCTGAGTAGATAGTTAGTTAGCCGGACAAAGCCAATTGTCATACAAGTCGTCGGTCCGCATTGTCCAGGCTGCGTGAACCTGTGCCCCCCCGCACCCGACGACGGCAAAGGGTGTTTCGATTCGGTTCGTGGAAATAACTCTAGTTGTGAATCGGTGGTATCACTACCAATTGTAACATCGCCACTAGGGCGTTGAGTACAGGATGAGGTCGTCCATTAATGCGCCCGTTTACATAATATGACAGGAGTGTTAATCGGGTGTCGTAAGAGGACTTTTGTCCACTATACACCGGAATGAGTAATAGTCACGAAGGGGCGCTAAGTCGGGGCAGGCCGAGAACTACGGGCGTGTGGTAGTAGGAGTGATATAATTAAGTCAGCTTCTTCGCCTATCGATCAGCCCGAAATGCAGTAGTCAGCGAGGCCGAGCATGACGACCGTTGACCAAGTATGAGTGCTCGTCGTTCCCCCGGCCCCATACCGAGCCACGGTAAGGCCTAGTAAGACGAATCGCATCCAGCTGCCCGCTGTTGGGTGCTCTTCGAACACGCACTCTCATTGTTTCAGGAGATTACCCGCCAATGTCTTTAGCAACCACGAAGTTCCGTGCAATTCACGGGAAGAGAAGCTGTGACAGGACATGGTTCATCTGTGCTAAAATTCAGTGGTGGATCCCTCGATCTTTGATCGTATCAGTCAACTTACAAATCGAAGAGAGAGCTTGGTACGTCGCTTTGGATCGCATTGTCCAATCGGGCGCAAATTACCCTGAGAAATCCACTCTGTTTAGCGAGGCCGGTGCTTCCTCGGTCTGCGAGGCGGTTTTCTCTCAACGGTGTGGGCCAAGGATCCTATAACTGACTTCAATGGAGTGCAAAAAGCGGACAGATATTGTATCACGCAGGCAAAGAAATATAACTTAGCCGTCACCAGTACGCTCCCACCACTGGCCAAGGGTCCCACTTTTTCCCGAAGGATATCCCGCAACGAATAGCCTTACCTTACTAGGATATTGTTAGGCGAACCATCCTCAAGGAAATACTCAATAAGATAGCGCCTCTACGTACCTTGCGGCGCGAGGATCTTGGAGATGATCTCTTATGTACTGTATGATTACTAGTAAGTGCGGGAAAGGAGACAGTCCGGGCTGAAAAGGGCTAAATCTCGAGACAAGAGGCGGAGGTAAGTCCCGGATTACTGCCAGCTGATGATACCGGAGCACTGGTTCTTGGATGGGCGAAAGAGTGAGCCGCCTGCCAGTAGCATTATTCTATCTCTACTTTAGAGAGCGTTCAGCGACTTCCACACGATAGACATCTGATCAGCATAACCGGGGAAGCATAACGCTGCGTAATGTCACAGCGCGTATGTATTTGCCTGGACCCGACCCTCCGGTCGCTTAGGTCATCTTGGGATAAGGTAGGCACCTTGGGTTTTCTATACTACGTTACTCTGTCACATGCTTGCCCTCGTAGGATGATGAACACAAGTGGTGATCCGTGTCTCGTGGTAAACCAGACGGATAGGAATACATAAGTTTGCGTTGGCGATTAGCTAAGACTGGGATTCTTTAAGTTAAATAGGTAGGACCCATATGGCAAAATGCAGTCAACCTGCCGCGCCCCACGCTGGTCCAAGACCAAGGTCTATTGTTGGTAATCGGTAATATTTGCTAATCAAGCCGTGACGCTGGACGAGACATCGCGGCTCTGTAGCCACAACTACCTCCTAAGAAAGACGTTAGGATACGAACGTTGATGGCACGGACTGTCACCGTTCACGATGCGATGTCAGTGGCGCCGGGAGAAAGAGTTCGGATTTCAATTTCAAGGGCTTATCGCGGACCCAAGAAGTCATTTAGCTGAGAGAACCTGCTCTTAGCGTGCGTCTGCGGAGAGGTAGCCACCATATTCAAAAACTCGCCCCGACAGTGCCCCGGACTATAAACAAACCTGATCCCTTATATTCCTTTTCAAGGCTTTGAGCTCATTTTAGTCGAACTAACGCTGCGGATCATTGGCCACCTACCGGTCCCCCTCCTGGACGGGGAGATTATACATTGGCTCCTCCCCGTCGCGTACCTTCCGTTGAGCGCAGTCCACGCACAACTAGAGGTCAACTTTAGACGCATCACACATAACATGCGATCCTCGATCCCGAAAGGACGATTTCGAAGAAATTGGAGACCCAAAACCAAGGTAAAGCTAATTGTGCGTCAACCTACCCAATAGCTCGTCCGTACAATCAACGTGAAATAGTAATCTCAGTCTTAGATCCAAAGCACCAATAAGTCACTTTCGTGGACGTTAGTTCTTGCGTTGTCGTAGCTCATGGATACCACCAAGGCCGGATGTTTTACGTCCCTCCACGGCATGTGCAGGTGCGGTCCACACCAGAGTGCCCTGAAAGTCATGCATCTACGGGGTAAAGGTTGCTAAATAGTATATGTATGGTGTTATAAACCTACAGTCCCTCGTAGTCGCTCATTCCACGATCTAAGCCAAAATCCGATGTGCCTAAGGGGAAACAGCGCACGGCGGATAGCAGACGCACGCCAGGTGTTCATGGCTCATAAGCTCATCGGATTCCCGACCTTACTGGTACATGATAAGAGACTCACGGCCGAACCGGATACTCGAGGGGTGACAGATTATGCACACCGAGGATGGGTAAGCGATTATATTAGAGCTCCACTATATGCAATCCTATTTTGAAACTAAGACCGAATTTATGACCTCAACTCTTCACGACCATCTTGCAGGTTATAATTCACTACCTGTGTGCTATCGTAGGTTATGAGCGTGGATCACCCGTGTAGTGGGTGGATGGCCGCAATGTACAAGCCTCTCAAGACCGGTCGACGGGAAGAGAAGGAAGGTTAAATGATGACGTTTATAAGGGACCACCGATTACATCATATACTTACTATAAATAGTTAGACCTTTTGACTAAGCTAAGTTTTACATCTGAGATATATTCGCAGGTGTCGCACTGTGCCGGCCCGTCCGGATGAACGTTAAGAGATATCGATGTTTATATATAACCCCCAGTTAGTGCCTCCTGAGTATGTCGCAGCTGTGGCATCCAGTATAGGAAATGCTATCGGCTTGAACTACGTCGTAAATATGTAATGCATGAGAGAGAGCGCTAAAGGTACCTCAAAGGGCCATTCTCCACACAATAACCCACTATGAAAGTAACATTAGCTCATGGGATTTAATCGGTCGTGCTAACTTGGCAAACGTCTTCCATTTCTTCCGCAACAACGTATATCGCATTTCTGCCTCGTAGTCGGTCTAGATATGCTAACCCTGCTTTCGCCAATAAAAGGGC"
    sub = string_composition_problem(k, text)
    with open("string_composition_problem_result.txt", "w") as f:   
        for i in sub:
            f.write(i)
            f.write("\n")